Coordinates: dimension coordinate and auxiliary constructs
----------------------------------------------------------

Coordinate constructs provide information which locate the cells of
the domain and which depend on a subset of the domain axis
constructs. As previously discussed, there are two distinct types of
coordinate construct: a dimension coordinate construct provides
monotonic numeric coordinates for a single domain axis, and an
auxiliary coordinate construct provides any type of coordinate
information for one or more of the domain axes. In both cases, the
coordinate construct consists of a data array of the coordinate values
which spans a subset of the domain axis constructs, an optional array
of cell bounds recording the extents of each cell, and properties to
describe the coordinates (in the same sense as for the field
construct). The bounds array spans the same domain axes as the
coordinate array, with the addition of one or more trailing dimensions
to index the vertices that define the extent of each cell.

The dimension coordinate construct is able to unambiguously describe
cell locations because a domain axis can be associated with at most
one dimension coordinate construct, whose data array values must all
be non-missing and strictly monotonically increasing or
decreasing. They must also all be of the same numeric data type. If
cell bounds are provided then each cell must have exactly two
vertices, i.e. the extent of each cell can be described as a line
segment along the domain axis. CF-netCDF coordinate variables and
numeric scalar coordinate variables correspond to dimension coordinate
constructs. Note that, for climatological time axes, the bounds are
interpreted in a special way indicated by the cell method constructs.

If a domain axis construct does not correspond to a continuous
physical quantity, then it is not necessary for it to be associated
with a dimension coordinate construct. For example, this is the case
for an axis that runs over ocean basins or area types, or for a domain
axis that indexes a time series at scattered points. In such cases,
one-dimensional auxiliary coordinate constructs could be used to store
coordinate values. These axes are discrete axes in CF-netCDF.

Auxiliary coordinate constructs have to be used, instead of dimension
coordinate constructs, when a single domain axis requires more then
one set of coordinate values, when coordinate values are not numeric,
strictly monotonic, or contain missing values, or when they vary along
more than one domain axis construct simultaneously. CF-netCDF
auxiliary coordinate variables and non-numeric scalar coordinate
variables correspond to auxiliary coordinate constructs.

If cell bounds are provided, they describe the extents of the cells.
Each cell comprises one or more parts, and each part is a collection
of points, or a line defined by a connected series of points, or a
polygonal area (i.e. the region enclosed by a connected series of
points, where the first and last points are connected as well). For a
given coordinate construct, all the parts of all the cells must be of
the same one of these three kinds, which are called "geometry types".

A fourth "climatology", geometry type is required for the cells of
climatological time coordinates. These are composed logically of
multiple line parts, but only the earliest and latest points defining
each cell are stored in the cell bounds array. The required points in
between are defined in a special way indicated by the cell method
constructs. Consequently



by can be described
algorithmical for which the defining points are implicitly defined by
the relevant cell method constructs, instead of being explicitly
defined by the cell bounds array.

There is a fourth type used by climatologocal time axes

The construct has a geometry type property to specify which of the
kinds it is; in CF-netCDF this is stored in the geometry_type
attribute of the geometry container variable. The bounds array spans
the same domain axes as its coordinate array, with the addition of two
trailing ragged dimensions. The first extra dimension indexes the
parts of each cell and the second indexes the points that describe
each part.

When a cell is composed of multiple polygon parts, an individual
polygon may define an "interior ring", i.e. a region that is to be
omitted from, as opposed to included in, the cell extent. In this case
an interior ring array is required that records whether each polygon
is to be included or excluded from the cell, and is supplied by an
interior ring variable in CF-netCDF. The interior ring array spans the
same domain axes as its coordinate array, with the addition of an
extra ragged dimension that indexes the parts for each cell. For
example, a cell describing the land area surrounding a lake would
require two polygon parts - one that encompasses the both the land and
the water; and one, recorded as an interior ring, that defines the
lake area to be omitted.

In CF-netCDF, if a geometry variable is not present then it is assumed
that, for all coordinate cells, there is only one part per geometry
and the geometry type is implied by convention: multidimensional
auxiliary coordinate variables are of the polygon geometry type and
all other type of coordinates are of the line goemetry type, and each
line is defined by exactly two points). Furthermore

In CF-netCDF, if a geometry variable is not present then all
corodinate cell bounds contain exactly one part and their geometry
type is implied by convention: bounds for multidimensional auxiliary
coordinate variables have the polygon geometry type and all other
coordinate bounds variable have the line goemetry type (and each line
is defined by two points). In this case, the bounds are stored with a
orthogonal array representation that has just one trailing dimension to its corodinates, i.e. the first 

zero or one-dimensional coordinate variableswhen the construct has only one domain
axis and every cell is a single line defned by two points; and when
the construct has multiple domain axes and every cell is a single
polygon.

If every cell contains only one part, the bounds array may omit the
first extra trailing dimension, i.e. the bounds array spans the same
domain axes as the coordinate array, with the addition of only one
extra ragged dimension that indexes the points of each cell. In this
case, the geometry type property can be omitted when the geometry
conforms to one of two cases, namely: when the construct has only one
domain axis and every cell is a single line defned by two points; and
when the construct has multiple domain axes and every cell is a single
polygon.
