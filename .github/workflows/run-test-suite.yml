# A GitHub Action to run the cfdm test suite after events on master.
name: Run test suite

# Triggers the workflow on push or PR events for the master branch (only)
on:
  push:
    branches:
      - master
  pull_request:
    # default (from docs) is just on [opened, synchronize, reopened]
    types: [opened, reopened, ready_for_review, edited]
    branches:
      - master

# Note a workflow can have 1+ jobs that can run sequentially or in parallel.
jobs:
  run-test-suite-job:

    # Set-up the build matrix. We run on different distros and Python versions.
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-16.04, macos-latest, macos-10.15]
        # Note: only 3.7 supported at the moment, but matrix tested to work
        # e.g. can specify [3.5, 3.6, 3.7, 3.8] and all 4 run in parallel
        python-version: [3.7]

    # Run on new and old(er) versions of the distros we support (Linux, Mac OS)
    runs-on: ${{ matrix.os }}

    # The sequence of tasks that will be executed as part of this job:
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Provide a notification message
    - name: Notify about setup
      run: echo Now setting up the environment for the cfdm test suite...

    # Prepare to run the test-suite on different versions of Python 3:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    # Setup conda, which is the simplest way to access all dependencies,
    # especially as some are C-based so otherwise difficult to setup.
    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1.1.2
      with:
        miniconda-version: 'latest'
        activate-environment: cfdm-latest
        python-version: ${{ matrix.python-version }}
        channels: anaconda

    # Ensure shell is configured with conda activated:
    - name: Check conda config
      shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
    # Install cfdm dependencies pre-testing
    # We do so with conda which was setup in a previous step.
    - name: Install cfdm with its dependencies
      shell: bash -l {0}
      run: |
        conda install -c anaconda libnetcdf
        # (The other, Python-based, deps are installed during the below command)
        # Important! Must install our development version of cfdm to test:
        pip install -e .

    # Provide another notification message
    - name: Notify about starting testing
      run: echo Setup complete. Now starting to run the cfdm test suite...

    # Finally run the test suite!
    - name: Run test suite
      shell: bash -l {0}
      run: |
        cd cfdm/test
        ./run_tests_and_coverage --nohtml
    # End with a message indicating the suite has completed its run
    - name: Notify about a completed run
      run: |
        echo The cfdm test suite run has completed.
